trigger:
- main

pool:
  name: Default

variables:
  terraformVersion: 'latest'
  tf_dir: 'Resource group'
  bkstrgrg: 'rgdevops'
  bkstrg: 'rgdevops'
  bkcontainer: 'tfstate'
  bkstrgkey: 'devpipeline.terraform.tfstate'

stages:
  - stage: tfvalidate
    jobs:
      - job: validate
        continueOnError: false
        steps:
          - task: TerraformInstaller@1
            displayName: tfinstall
            inputs:
             terraformVersion: $(terraformVersion)
          - task: TerraformTask@5
            displayName: 'init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'My service connection'
              backendAzureRmResourceGroupName: '$(bkstrgrg)'
              backendAzureRmStorageAccountName: '$(bkstrg)'
              backendAzureRmContainerName: '$(bkcontainer)'
              backendAzureRmKey: '$(bkstrgkey)'
          - task: TerraformTask@5
            displayName: validate
            inputs:
              provider: 'azurerm'
              command: 'validate'
  - stage: tfdeploy
    condition: succeeded('tfvalidate')
    dependsOn: tfvalidate
    jobs:
      - job: apply
        steps:
         - task: TerraformInstaller@1
           displayName: tfinstall
           inputs:
            terraformVersion: $(terraformVersion)
         - task: TerraformTask@5
           displayName: init
           inputs:
             provider: 'azurerm'
             command: 'init'
             backendServiceArm: 'My service connection'
             backendAzureRmResourceGroupName: '$(bkstrgrg)'
             backendAzureRmStorageAccountName: '$(bkstrg)'
             backendAzureRmContainerName: '$(bkcontainer)'
             backendAzureRmKey: '$(bkstrgkey)'
         - task: TerraformTask@5
           displayName: plan
           inputs:
             provider: 'azurerm'
             command: 'plan'
             workingDirectory: '$(System.DefaultWorkingDirectory)/$(tf_dir)'
             environmentServiceNameAzureRM: 'My service connection'
         - task: TerraformTask@5
           displayName: apply
           inputs:
             provider: 'azurerm'
             command: 'apply'
             environmentServiceNameAzureRM: 'My service connection'

